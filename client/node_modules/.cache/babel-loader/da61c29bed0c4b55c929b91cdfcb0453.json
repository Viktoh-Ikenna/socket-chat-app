{"ast":null,"code":"var _jsxFileName = \"/home/chidex/Documents/Socket-Chat-App-main/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { ShowOnline } from './showOnline';\nimport \"./App.css\";\nlet socket;\nconst CONNECTION_PORT = \"localhost:3002/\";\n\nfunction App() {\n  // Before Login\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [userName, setUserName] = useState(\"\"); // After Login\n\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  useEffect(() => {\n    socket = io(CONNECTION_PORT);\n  }, [CONNECTION_PORT]);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList([...messageList, data]);\n    });\n  });\n\n  const connectToRoom = () => {\n    setLoggedIn(true);\n    socket.emit(\"join_room\", room);\n  };\n\n  const sendMessage = async () => {\n    let messageContent = {\n      room: room,\n      content: {\n        author: userName,\n        message: message\n      }\n    };\n    await socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.content]);\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, !loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name...\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Room...\",\n    onChange: e => {\n      setRoom(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connectToRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Enter Chat\")) : /*#__PURE__*/React.createElement(ShowOnline, {\n    messageList: messageList,\n    setMessage: setMessage,\n    sendMessage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chidex/Documents/Socket-Chat-App-main/client/src/App.js"],"names":["React","useState","useEffect","io","ShowOnline","socket","CONNECTION_PORT","App","loggedIn","setLoggedIn","room","setRoom","userName","setUserName","message","setMessage","messageList","setMessageList","on","data","connectToRoom","emit","sendMessage","messageContent","content","author","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport {ShowOnline} from './showOnline'\nimport \"./App.css\";\n\nlet socket;\nconst CONNECTION_PORT = \"localhost:3002/\";\n\nfunction App() {\n  // Before Login\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  // After Login\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  useEffect(() => {\n    socket = io(CONNECTION_PORT);\n  }, [CONNECTION_PORT]);\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList([...messageList, data]);\n    });\n  });\n  const connectToRoom = () => {\n    setLoggedIn(true);\n    socket.emit(\"join_room\", room);\n  };\n\n  const sendMessage = async () => {\n    let messageContent = {\n      room: room,\n      content: {\n        author: userName,\n        message: message,\n      },\n    };\n\n    await socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.content]);\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      {!loggedIn ? (\n        <div className=\"logIn\">\n          <div className=\"inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Name...\"\n              onChange={(e) => {\n                setUserName(e.target.value);\n              }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Room...\"\n              onChange={(e) => {\n                setRoom(e.target.value);\n              }}\n            />\n          </div>\n          <button onClick={connectToRoom}>Enter Chat</button>\n        </div>\n      ) : <ShowOnline messageList={messageList} setMessage={setMessage} sendMessage/>}\n  </div>\n  )}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}